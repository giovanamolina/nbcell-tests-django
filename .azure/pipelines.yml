trigger:
  branches:
    include:
      - master
  tags:
    include:
      - v*

stages:
- stage: dev
  displayName: Development tests
  jobs:
  - template: dev-template.yml
    parameters:
      name: 'Linux'
      pool:
        vmImage: 'ubuntu-latest'
  - template: dev-template.yml
    parameters:
      name: 'Mac'
      pool:
        vmImage: 'macos-10.14'
  - template: dev-template.yml
    parameters:
      name: 'Windows'
      pool:
        vmImage: 'vs2017-win2016'
      also_forked: false

- stage: package
  displayName: Upload to azure feed
  condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
  jobs:
  - job: BuildAndUploadPackages
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.7'
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
    - script: |
        # duplicates pyproject.toml; see https://github.com/pypa/pip/issues/6041 etc etc etc...
        python -m pip install wheel setuptools jupyter-packaging twine
        make dist
      displayName: 'Create packages'
    - task: TwineAuthenticate@0
      inputs:
        artifactFeeds: jupyter/packages-testing
    # TODO: replace with: env vars and make publishpy
    - script: |
        twine check dist/* && twine upload -r jupyter/packages-testing --config-file $(PYPIRC_PATH) dist/*
      displayName: 'Upload packages'
    # equivalent of "make publishjs", but to azure feed
    - task: Npm@1
      inputs:
        command: publish
        workingDir: js
        publishRegistry: useFeed
        publishFeed: jupyter/packages-testing

- stage: package_test
  displayName: Install and test packages as a user
  condition: and(succeeded(), startsWith(variables['build.sourceBranch'], 'refs/tags/v'))
  jobs:
  - template: test-template.yml
    parameters:
      name: 'Linux'
      pool:
        vmImage: 'ubuntu-latest'
  - template: test-template.yml
    parameters:
      name: 'Mac'
      pool:
        vmImage: 'macos-10.14'
  - template: test-template.yml
    parameters:
      name: 'Windows'
      pool:
        vmImage: 'vs2017-win2016'
